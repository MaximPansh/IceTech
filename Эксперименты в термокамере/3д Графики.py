# -*- coding: utf-8 -*-
"""
Created on Sun Nov 14 19:47:38 2021

@author: Кирилл
"""
import matplotlib as mpl
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as mtick

def Aprox_array(X, k, p): 
   
    return k*X**p

mpl.rcParams['legend.fontsize'] = 14
fig = plt.figure()
ax = fig.gca(projection='3d')


dic = {"1":{'F':{20:{'ЦП':[0.3314, 1.761], '1кан':[0.3524, 1.497], '2кан':[1.549, 0.8266], '3кан':[0.9811, 1.001]},
       10:{'ЦП':[3.912, 1.378], '1кан':[2.617, 1.199], '2кан':[3.027, 0.9463], '3кан':[4.485, 0.6963]},
       3:{'ЦП':[2.374, 1.736], '1кан':[2.052, 1.603], '2кан':[1.71, 1.61], '3кан':[0.9332, 1.922]}
           },
       'A1':{20:{'ЦП':[0.001135, 2.28], '1кан':[0.001524,1.714], '2кан':[0.006139, 1.131], '3кан':[0.006643, 1.085]},
       10:{'ЦП':[0.0218, 1.688], '1кан':[0.008373, 1.685], '2кан':[0.00832, 1.393], '3кан':[0.01913, 0.9639]},
       3:{'ЦП':[0.01458, 1.949], '1кан':[0.01079, 1.822], '2кан':[0.01157, 1.675], '3кан':[0.001156, 3.019]}
           }
       },
       "2":{'F':{
       10:{'ЦП':[3.395, 1.072], '1кан':[1.073, 1.418], '2кан':[0.1701, 2.227], '3кан':[2.808, 0.986]},
       3:{'ЦП':[0.09707, 3.38], '1кан':[0.6035, 1.963], '2кан':[0.1613, 2.587], '3кан':[]}
           },
       'A1':{
       10:{'ЦП':[0.0212, 1.347], '1кан':[0.0428, 0.8302], '2кан':[0.002732, 1.946], '3кан':[0.01489, 1.216]},
       3:{'ЦП':[0.01458, 1.949], '1кан':[0.0001051, 6.019], '2кан':[0.01157, 1.675], '3кан':[]}
           }
       },
       "3":{'F':{
       3:{'ЦП':[34.87, 0.5321], '1кан':[0.6495, 1.923], '2кан':[0.9545, 1.713], '3кан':[9.564, 0.752]}
           },
       'A1':{
       3:{'ЦП':[0.01046, 1.074], '1кан':[0.0982 * 10** -5, 3.605], '2кан':[0.001852, 2.313], '3кан':[0.0002064, 3.314]}
           }
       }
       }


key_nat = "F" #Выбор между силой и работой
Gran =[3, 10, 20] #диаметр гранул
Gran = 3
layer = ["1", "2", "3"] # количество слоёв
Type = "ЦП" #тип нагружения 



h_right = {'1':7, '2':10, '3':17.4}
h_left = {'1':2.2, '2':6, '3':8}

for i in layer:
    h = np.arange(h_left[i], h_right[i], 0.1) # массив толщин льда
    #h = np.arange(3, 12, 0.1)
    APR = Aprox_array(h, dic[i][key_nat][Gran][Type][0], dic[i][key_nat][Gran][Type][1] ) # Апроксимация данных
    G_type = np.ones(len(APR), dtype = int ) * int(i) # cоздаем единичный массив из единиц длиной как массив толщин льда и умножаем его на диаметр гранул
    ax.plot(h, G_type, APR, label ="Слоёв: " + str(i) + " ")# Строим график 3д, оси записываются в следующем порядке: Х,У,Z


ax.set_xlabel('Толщина льда, мм')
ax.set_ylabel('Диаметр гранул, мм')


if key_nat =="F":
    ax.set_zlabel('Максимальная сила, Н')
else:
    ax.set_zlabel('Работа разрушения, Дж')
    
    
ax.yaxis.set_major_locator(mtick.MultipleLocator(1))
ax.legend()
plt.show()
